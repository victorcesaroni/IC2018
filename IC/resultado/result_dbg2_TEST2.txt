. Calculando numero medio de hops
  totalHops = 16 / minimumPathsCount = 12
  avgHops = 1.333333
. Alocando lambdas
  Alocando utilizando BASIC
n1->n2: L1
n1->n2->n3: L2
n1->n4: L1
n2->n1: L3
n2->n3: L1
n2->n1->n4: L4
n3->n2->n1: L5
n3->n2: L3
n3->n4: L1
n4->n1: L2
n4->n1->n2: L6
n4->n3: L2
  Alocando utilizando RANDOM
n2->n1->n4: L1
n4->n1->n2: L2
n2->n3: L1
n3->n2->n1: L3
n1->n2->n3: L4
n2->n1: L5
n1->n2: L6
n4->n1: L3
n3->n4: L1
n4->n3: L2
n3->n2: L2
n1->n4: L4
  Alocando utilizando FIRST_FIT
n1->n2: L1
n1->n4: L1
n2->n3: L1
n3->n4: L1
n1->n2->n3: L2
n4->n1: L2
n4->n3: L2
n2->n1: L3
n3->n2: L3
n2->n1->n4: L4
n3->n2->n1: L5
n4->n1->n2: L6
  Alocando utilizando LEAST_USED
n1->n2: L1
n1->n4: L1
n2->n3: L1
n3->n4: L1
n1->n2->n3: L2
n4->n1: L2
n4->n3: L2
n2->n1: L3
n3->n2: L3
n2->n1->n4: L4
n3->n2->n1: L5
n4->n1->n2: L6
  BASIC 6 lambdas usados / 0 conversoes feitas
  RANDOM 6 lambdas usados / 0 conversoes feitas
  FIRST_FIT 6 lambdas usados / 0 conversoes feitas
  LEAST_USED 6 lambdas usados / 0 conversoes feitas
  Melhor estrategia encontrada para reduzir lambda: BASIC
  Melhor estrategia encontrada para reduzir conversao: BASIC
*******************************************************
* Matriz de custo:
    n1  n2  n3  n4 
 n1 0   1   X   1   
 n2 1   0   1   X   
 n3 X   1   0   1   
 n4 1   X   1   0   
*******************************************************
* Numero medio de hops: 1.333333
*******************************************************
* Utilizacao de enlace:
(n1->n2) 3
(n1->n4) 2
(n2->n1) 3
(n2->n3) 2
(n3->n2) 2
(n3->n4) 1
(n4->n1) 2
(n4->n3) 1
*******************************************************
* Alocacao de lambda por caminho minimo:
(n1->n2) (3 lambdas) L1 L2 L6 
(n1->n4) (2 lambdas) L1 L4 
(n2->n1) (3 lambdas) L3 L4 L5 
(n2->n3) (2 lambdas) L1 L2 
(n3->n2) (2 lambdas) L3 L5 
(n3->n4) (1 lambdas) L1 
(n4->n1) (2 lambdas) L2 L6 
(n4->n3) (1 lambdas) L2 
Lambdas usados (6): L1 L2 L3 L4 L5 L6 
